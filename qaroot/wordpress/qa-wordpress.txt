<hitle>	Html to Wordpress 	<chare>	1	<pext>	
background:url(./images/
url(<?php echo get_stylesheet_directory_uri(); ?>/images/

src="./images/
src="<?php echo get_stylesheet_directory_uri(); ?>/images/

<?php echo get_site_url(); ?>/news/
get_template_part('template-parts/common-blog');

1. download underscore theme
2. delete unnecessary files
3. delete default styles
4. make header and footer
5. make extra.css, add pmhwp.css
6. make news/detail page	</end>
<hitle>	Page hierarchy	<chare>	1	<pext>	------Home page----------
By default, WordPress sets your site’s home page to display your latest blog posts. 
This page is called the blog posts index. You can also set your blog posts to display on a separate static page. 
The template file home.php is used to render the blog posts index, whether it is being used as the front page or on separate static page. 
If home.php does not exist, WordPress will use index.php.
If front-page.php exists, it will override the home.php template.

1. home.php
2. index.php

---------Front page----------
The front-page.php template file is used to render your site’s front page, whether the front page displays the blog posts index (mentioned above) or a static page. 
The front page template takes precedence over the blog posts index (home.php) template. 
If the front-page.php file does not exist, WordPress will either use the home.php or page.php files depending on the setup in Settings → Reading. If neither of those files exist, it will use the index.php file.

1. front-page.php
Used for both “your latest posts” or “a static page” as set in the front page displays section of Settings → Reading.
2. home.php
If WordPress cannot find front-page.php and “your latest posts” is set in the front page displays section, it will look for home.php. Additionally, WordPress will look for this file when the posts page is set in the front page displays section.
3. page.php
When “front page” is set in the front page displays section.
4. index.php
When “your latest posts” is set in the front page displays section but home.php does not exist or when front page is set but page.php does not exist.

------------Privacy Policy Page display---------
The privacy-policy.php template file is used to render your site’s Privacy Policy page. 
The Privacy Policy page template takes precedence over the static page (page.php) template. 
If the privacy-policy.php file does not exist, WordPress will either use the page.php or singular.php files depending on the available templates. 
If neither of those files exist, it will use the index.php file.

1. privacy-policy.php
Used for the Privacy Policy page set in the Change your Privacy Policy page section of Settings → Privacy.
2. custom template file
The page template assigned to the page. See get_page_templates().
3. page-{slug}.php
If the page slug is privacy, WordPress will look to use page-privacy.php.
4. page-{id}.php
If the page ID is 6, WordPress will look to use page-6.php.
5. page.php
6. singular.php
7. index.php

--------------------------Single Post--------------------------
The single post template file is used to render a single post. WordPress uses the following path:

1. single-{post-type}-{slug}.php
(Since 4.4) First, WordPress looks for a template for the specific post. For example, if post type is product and the post slug is dmc-12, WordPress would look for single-product-dmc-12.php.
2. single-{post-type}.php
If the post type is product, WordPress would look for single-product.php.
3. single.php
WordPress then falls back to single.php.
4. singular.php
Then it falls back to singular.php.
5. index.php
Finally, as mentioned above, WordPress ultimately falls back to index.php.

--------------------------Single Page--------------------------
The template file used to render a static page (page post-type). Note that unlike other post-types, page is special to WordPress and uses the following path:

1. custom template file
The page template assigned to the page. See get_page_templates().
2. page-{slug}.php
If the page slug is recent-news, WordPress will look to use page-recent-news.php.
3. page-{id}.php
If the page ID is 6, WordPress will look to use page-6.php.
4. page.php
5. singular.php
6. index.php

--------------------------Category--------------------------
Rendering category archive index pages uses the following path in WordPress:

1. category-{slug}.php
If the category’s slug is news, WordPress will look for category-news.php.
2. category-{id}.php
If the category’s ID is 6, WordPress will look for category-6.php.
3. category.php
4. archive.php
5. index.php

--------------------------Tag--------------------------
To display a tag archive index page, WordPress uses the following path:

1. tag-{slug}.php
If the tag’s slug is sometag, WordPress will look for tag-sometag.php.
2. tag-{id}.php
If the tag’s ID is 6, WordPress will look for tag-6.php.
3. tag.php
4. archive.php
5. index.php

--------------------------Custom Taxonomies--------------------------
Custom taxonomies use a slightly different template file path:

1. taxonomy-{taxonomy}-{term}.php
If the taxonomy is sometax, and taxonomy’s term is someterm, WordPress will look for taxonomy-sometax-someterm.php. In the case of post formats, the taxonomy is ‘post_format’ and the terms are ‘post-format-{format}. i.e. taxonomy-post_format-post-format-link.php for the link post format.
2. taxonomy-{taxonomy}.php
If the taxonomy were sometax, WordPress would look for taxonomy-sometax.php.
3. taxonomy.php
4. archive.php
5. index.php

--------------------------Custom Post Types--------------------------
Custom Post Types use the following path to render the appropriate archive index page.

1. archive-{post_type}.php
If the post type is product, WordPress will look for archive-product.php.
2. archive.php
3. index.php
(For rendering a single post type template, refer to the single post display section above.)

--------------------------Author display--------------------------
Based on the above examples, rendering author archive index pages is fairly explanatory:

1. author-{nicename}.php – If the author’s nice name is matt, WordPress will look for author-matt.php.
2. author-{id}.php – If the author’s ID were 6, WordPress will look for author-6.php.
3. author.php
4. archive.php
5. index.php

--------------------------Date--------------------------
Date-based archive index pages are rendered as you would expect:

1. date.php
2. archive.php
3. index.php

--------------------------Search Result--------------------------
Search results follow the same pattern as other template types:

1. search.php
2. index.php

--------------------------404 (Not Found) --------------------------
Likewise, 404 template files are called in this order:
404.php
index.php

--------------------------Attachment--------------------------
Rendering an attachment page (attachment post-type) uses the following path:

1. {MIME-type}.php
 can be any MIME type (For example: image.php, video.php, pdf.php). For text/plain, the following path is used (in order):
1-1. text-plain.php
1-2. plain.php
1-3. text.php
2. attachment.php
3. single-attachment-{slug}.php
For example, if the attachment slug is holiday, WordPress would look for single- attachment-holiday.php.
4. single-attachment.php
5. single.php
6. singular.php
7. index.php

--------------------------Embeds--------------------------
The embed template file is used to render a post which is being embedded. Since 4.5, WordPress uses the following path:

1. embed-{post-type}-{post_format}.php
First, WordPress looks for a template for the specific post. For example, if its post type is post and it has the audio format, WordPress would look for embed-post-audio.php.
2. embed-{post-type}.php
If the post type is product, WordPress would look for embed-product.php.
3. embed.php
WordPress then falls back to embed.php.
4. Finally, WordPress ultimately falls back to its own wp-includes/theme-compat/embed.php template.

--------------------------Non-ASCII Character Handling--------------------------
Since WordPress 4.7, any dynamic part of a template name which includes non-ASCII characters in its name actually supports both the un-encoded and the encoded form, in that order. You can choose which to use.
Here’s the page template hierarchy for a page named “Hello World  ” with an ID of 6:

1. page-hello-world- .php
2. page-hello-world-%f0%9f%98%80.php
3. page-6.php
4. page.php
5. singular.php

The same behaviour applies to post slugs, term names, and author nicenames.

--------------------------Filter Hierarchy--------------------------
The WordPress template system lets you filter the hierarchy. This means that you can insert and change things at specific points of the hierarchy. The filter (located in the get_query_template() function) uses this filter name: "{$type}_template" where $type is the template type.

Here is a list of all available filters in the template hierarchy:

embed_template
404_template
search_template
frontpage_template
home_template
privacypolicy_template
taxonomy_template
attachment_template
single_template
page_template
singular_template
category_template
tag_template
author_template
date_template
archive_template
index_template	</end>
<hitle>	post_meta data	<chare>	1	<pext>	get_post_meta( get_the_ID(), 'thumbnailurl', true )
update_post_meta($post->ID, 'views', $views + 1);	</end>
<hitle>	Format date	<chare>	1	<pext>	date_format(date_create($date),"Y年 m月");	</end>
<hitle>	Change excerpt length	<chare>	1	<pext>	function my_excerpt_length($length){ return 80; } 
add_filter(‘excerpt_length’, ‘my_excerpt_length’);	</end>
<hitle>	Order by meta value	<chare>	1	<pext>	$args = array(
	'post_type' => 'product',
	'orderby'   => 'meta_value_num',
	'meta_key'  => 'price',
);
$query = new WP_Query( $args );	</end>
<hitle>	Custom pos type monthly archive permalink 	<chare>	1	<pext>	/**
 * Generate date archive rewrite rules for a given custom post type
 * @param  string $cpt        slug of the custom post type
 * @return rules              returns a set of rewrite rules for Wordpress to handle
 */
function cpt_generate_date_archives($cpt, $wp_rewrite) {
    $rules = array();

    $post_type = get_post_type_object($cpt);
    $slug_archive = $post_type->has_archive;
    if ($slug_archive === false) return $rules;
    if ($slug_archive === true) {
        $slug_archive = $post_type->name;
    }

    $dates = array(
        array(
            'rule' => "([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})",
            'vars' => array('year', 'monthnum', 'day')),
        array(
            'rule' => "([0-9]{4})/([0-9]{1,2})",
            'vars' => array('year', 'monthnum')),
        array(
            'rule' => "([0-9]{4})",
            'vars' => array('year'))
        );

    foreach ($dates as $data) {
        $query = 'index.php?post_type='.$cpt;
        $rule = $slug_archive.'/'.$data['rule'];

        $i = 1;
        foreach ($data['vars'] as $var) {
            $query.= '&'.$var.'='.$wp_rewrite->preg_index($i);
            $i++;
        }

        $rules[$rule."/?$"] = $query;
        $rules[$rule."/feed/(feed|rdf|rss|rss2|atom)/?$"] = $query."&feed=".$wp_rewrite->preg_index($i);
        $rules[$rule."/(feed|rdf|rss|rss2|atom)/?$"] = $query."&feed=".$wp_rewrite->preg_index($i);
        $rules[$rule."/page/([0-9]{1,})/?$"] = $query."&paged=".$wp_rewrite->preg_index($i);
    }
    return $rules;
}	</end>
<hitle>	Check Contain String 	<chare>	1	<pext>	if(strpos("PHP string example.", "PHP") !== false){
    echo "Found!";
}	</end>
<hitle>	Function.php init	<chare>	1	<pext>	/******************************************************************************/

add_action( 'after_setup_theme', 'custom_setup_theme' );
function custom_setup_theme() {
	$new_page_list = [
		'about',
		'company',
		'service',
		'contact',
		'success',
		'failed',
		'privacypolicy',
		'request',
		'request-confirm',
		'request-success',
		'request-failed',
		'blog'
	];
	foreach($new_page_list as $page_slug) {
		$new_page = array(
				'post_type'     => 'page', 				// Post Type Slug eg: 'page', 'post'
				'post_title'    => $page_slug,	// Title of the Content
				'post_status'   => 'publish',			// Post Status
				'post_name'     => $page_slug			// Slug of the Post
		);
		if (!get_page_by_path( $page_slug, OBJECT, 'page')) { // Check If Page Not Exits
				$new_page_id = wp_insert_post($new_page);
		}
	}

	// for($i=0;$i<10;$i++) {
	// 	$new_page = array(
	// 		'post_type'     => 'post', 				// Post Type Slug eg: 'page', 'post'
	// 		'post_title'    => 'タイトルテキストがあります。タイトルテキストがあります。タイトルテキストがあります。',	// Title of the Content
	// 		'post_content' => '内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキストがあります。内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキスト内容 テキストがあります。',
	// 		'post_status'   => 'publish',			// Post Status
	// 		'post_name'     => 'post'.$i			// Slug of the Post
	// 	);
	// 	wp_insert_post($new_page);
	// }	
}	</end>
<hitle>	Fixed image div width-height	<chare>	1	<pext>	.discography_left_dp { 
    width:160px;
    padding-top: 160px;
    overflow: hidden;
    position: relative;
}
.discography_left_dp img{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
    min-height: 100%;
    object-fit: cover;
}	</end>
<hitle>	Post query and loop	<chare>	1	<pext>	$args = array(
    'post_type' => 'post',
    'paged' => get_query_var('paged'),
    'orderby' => 'publish_date',
    'order' => 'DESC',
//'posts_per_page' => -1, //page limit
);
$query = new WP_Query($args);
if ( $query->have_posts() ) :
    while ( $query->have_posts() ) :
        $query->the_post();
        $loop_id = get_the_id();
        $loop_title = get_the_title();
        $loop_content = get_the_excerpt();
        $loop_date = get_the_date('Y/m/d');
        $loop_terms = get_the_terms($loop_id, 'disco_cat'); //get the custom category
        $loop_cat = $loop_terms[0]->name;
        $loop_permalink = get_the_permalink($loop_id);
        $loop_thumb_url = get_thumb_url($loop_id);
    endwhile;
endif;	</end>
<hitle>	Relative posts loop	<chare>	2	<pext>	$terms = get_the_terms( get_the_ID(), 'category' );
$term_list = wp_list_pluck( $terms, 'slug' );
$related_args = array(
	'post_type' => 'post',
	'posts_per_page' => 3,
	'post_status' => 'publish',
	'post__not_in' => array( get_the_ID() ),
	'orderby' => 'rand',
	'tax_query' => array(
		array(
			'taxonomy' => 'category',
			'field' => 'slug',
			'terms' => $term_list
		)
	)
);
$query = new WP_Query( $related_args );
if ( $query->have_posts() ) :
    while ( $query->have_posts() ) :
        $query->the_post();
        $loop_id = get_the_id();
        $loop_title = get_the_title();
        $loop_content = get_the_excerpt();
        $loop_date = get_the_date('Y.m.d');
        $loop_category_name = "";
        $loop_category_objects = get_the_category($loop_id);
        foreach($loop_category_objects as $cd){
            $loop_category_name = $cd->cat_name;
            break;
        }
        $loop_permalink = get_the_permalink($loop_id);
        $loop_thumb_url = get_thumb_url($loop_id);
    endwhile;
endif;	</end>
<hitle>	Get feature/thumbnail image url	<chare>	1	<pext>	function get_thumb_url($post_id, $default_empty = true) {
	$thumb_url = "";
	$thumb_id = get_post_thumbnail_id($post_id); //get the featured image
	$thumb_url_array = wp_get_attachment_image_src($thumb_id, 'thumbnail-size', true);
	if(!empty($thumb_url_array)) {
		$thumb_url = $thumb_url_array[0];
	}
	if(strpos($thumb_url, "default.png") !== false){
		$thumb_url = "";
	}
	if(empty($thumb_url) && $default_empty) {
		$thumb_url = get_stylesheet_directory_uri()."/images/empty.jpg";
	}
	return $thumb_url;
}	</end>
<hitle>	WP-PageNavi	<chare>	1	<pext>	Pagination plugin       	</end>
<hitle>	Manual post pagenavi	<chare>	2	<pext>	$args = array(
	'post_type' => 'news-item',
	'posts_per_page' => 5,
	'paged' => get_query_var('paged'),
	'orderby' => 'publish_date',
	'order' => 'DESC',
);
$query = new WP_Query($args);

<?php wp_pagenavi(array('query' => $query)); ?>

<div class="follow_code">
    <div class="pagination_wrap">
        <?php wp_pagenavi(array('query' => $query)); ?>
    </div>									
</div>       	</end>
<hitle>	Wp-pagenavi css	<chare>	2	<pext>	.pagination_wrap {
	display: flex;
	align-items: center;
    justify-content: center;
	padding-top: 50px;
}
.wp-pagenavi {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    column-gap: 3px;
}

.wp-pagenavi a,
.wp-pagenavi span {
    width: 36px;
    height: 36px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    color: #fff;
    border-color: #fff;
	font-size: 14px;
}
.wp-pagenavi a.previouspostslink {
	width: 94px;
}
.wp-pagenavi a.nextpostslink {
	width: 64px;
}
.wp-pagenavi span {
    color: #fff;
    background-color: #000;
}

.wp-pagenavi a:hover {
    color: #000 !important;
	background-color: #fff !important;
}

.wp-pagenavi span.current {
	background-color: #fff;
	color: #000;
}

@media(min-width:0px) and (max-width:767px){
	.wp-pagenavi a,
	.wp-pagenavi span {
		width: 24px;
		height: 24px;
		font-size: 10px;
	}
	.wp-pagenavi a.previouspostslink {
		width: 70px;
	}
	.wp-pagenavi a.nextpostslink {
		width: 48px;
	}
}	</end>
<hitle>	Get all tag	<chare>	1	<pext>	$tags = get_tags(array(
  'hide_empty' => false
));
foreach ($tags as $tag) {
    $tag->name;
    get_tag_link($tag->term_id);
}	</end>
<hitle>	Get all category	<chare>	1	<pext>	$categories = get_categories();
foreach($categories as $category) {
   echo '<div class="col-md-4"><a href="' . get_category_link($category->term_id) . '">' . $category->name . '</a></div>';
}	</end>
<hitle>	Get category and tags from post	<chare>	1	<pext>	$loop_id = $post_ids[$i];
$loop_category_objects = get_the_category($loop_id);
$loop_category_name = "";
foreach($loop_category_objects as $cd){
    $loop_category_name = $cd->cat_name;
    break;
}
$loop_tags = [];
$loop_tag_objects = get_the_tags();
if ($loop_tag_objects) {
    foreach($loop_tag_objects as $tag) {
        array_push($loop_tags, array('name' => $tag->name, 'link' => get_tag_link($tag->term_id)));
    }
}	</end>
<hitle>	Ranking, Favorite post list	<chare>	1	<pext>	*******In the single post*****
$visit_count = get_post_meta($loop_id, 'visit_count', true);
if(empty($visit_count)) $visit_count = 0;
$visit_count++;
update_post_meta($loop_id, 'visit_count', $visit_count);

*******To get ranking, favorite post list****
<?php
$favor_args = array(
	'post_type' => 'post',
	'orderby'   => 'meta_value_num',
	'meta_key'  => 'visit_count',
	'order' => 'DESC',
	'posts_per_page' => 5
);
$favor_query = new WP_Query($favor_args);
$favor_count = 0;
if ( $favor_query->have_posts() ) :
    while ( $favor_query->have_posts() ) :
        $favor_query->the_post();
        $loop_id = get_the_id();
        $loop_title = get_the_title();
        $loop_date = get_the_date('Y.m.d');
        $loop_permalink = get_the_permalink($loop_id);
        $loop_thumb_url = get_thumb_url($loop_id);
        $favor_count++;
    endwhile;
endif;
?>	</end>
<hitle>	Current category in Archive	<chare>	1	<pext>	global $wp_query;
$query = $wp_query;

$category_id = 0;
if(is_category() || is_single()){
	$category_id = get_query_var('cat');
}	</end>
<hitle>	Monthly archieve link	<chare>	1	<pext>	function get_monthly_archive_array() {
	$years      = [];
	$years_args = [
	   'type'      => 'monthly',
	   'format'    => 'custom',
	   'before'    => '',
	   'after'     => '|',
	   'echo'      => false,
	   'post_type' => 'post',
 //    'order'     => 'ASC',
	];
 
	// Get Years
	$years_content = wp_get_archives( $years_args );
 
	if ( ! empty( $years_content ) ) {
	   $years_arr = explode( '|', $years_content );
 
	   // Remove empty whitespace item from array.
	   $years_arr = array_filter( $years_arr, function ( $item ) {
		  return trim( $item ) !== '';
	   } );
 
	   foreach ( $years_arr as $year_item ) {
 
		  $year_row = trim( $year_item );
		  preg_match( '/href=["\']?([^"\'>]+)["\']>(.+)<\/a>/', $year_row, $year_vars );
 
		  if ( ! empty( $year_vars ) && is_array( $year_vars ) ) {
			 $year_url = ! empty( $year_vars[1] ) ? $year_vars[1] : ''; // Eg: http://demo.com/2021/11/
			 $parts    = parse_url( $year_url );
			 $path     = ! empty( $parts['path'] ) ? $parts['path'] : '';
 
			 $years[] = [
				'name'  => $year_vars[2], // Eg: November 2021
				'value' => $path // Eg: /2021/11/ , so that we can prefix o suffix our own URL.
			 ];
		  }
	   }
	}
 
	return $years;
}

function get_jp_date($date) {
	$date = date_create($date);
	return date_format($date,"Y年 m月");
}	</end>
<hitle>	Search custom post type	<chare>	1	<pext>	https://pagedart.com/blog/wordpress-search-for-custom-post-type/
<form id="search" action="' . home_url( '/' ) . '" method="get">
    <input type="hidden" name="post_type" value="book" />
    <input id="s" name="s" type="text" value="' . get_search_query() . '" />
</form>	</end>
<hitle>	Contact form	<chare>	1	<pext>	1. write php code
if(isset($_POST['submit-confirm']) && ($_POST['submit-confirm'] == 'submit-confirm')) {

    $field1 = isset($_POST['field1']) ? $_POST['field1']: '';
    $field2 = isset($_POST['field2']) ? $_POST['field2']: '';
    $field3 = isset($_POST['field3']) ? $_POST['field3']: '';
    $field4 = isset($_POST['field4']) ? $_POST['field4']: '';
    $field5 = isset($_POST['field5']) ? $_POST['field5']: '';
    
    $to      = 'prgfinal216@gmail.com';

    $message = "
    お名前 : ".$field1."<br>
    メールアドレス : ".$field2."<br>
    電話番号 : ".$field3."<br>
    お問い合わせ内容 : ".$field4."<br>
    お問い合わせ詳細 : <br>".$field5."<br>
    ";

    $subject = 'お問い合わせがありました';

    $headers = "From: " . $field2 . "\r\n";
    $headers .= "Reply-To: " . $field2 . "\r\n";
    $headers .= "MIME-Version: 1.0\r\n";
    $headers .= "Content-Type: text/html; charset=UTF-8\r\n";

    if(mail($to, $subject, $message, $headers)) {
      echo '<script>location.href="'.home_url().'/success"</script>';
    } else {
      echo '<script>location.href="'.home_url().'/failed"</script>';
    }
    
    if(mail($to, $subject, $message, $headers)) {
        echo '<script>alert("Success!"); location.href="'.home_url().'"</script>';
    } else {
        echo '<script>alert("Failed!"); location.href="'.home_url().'"</script>';
    }  
}

2. add form tag
<form action="" method="post" enctype="multipart/form-data">
<div class="formBtn">
                    <input type="hidden" name="submit-confirm" value="submit-confirm">
                    <button id="submit-btn" class="btn -type5" type="submit">送信</button>
                </div>
            </div>
          </form>

3. change a tag to button and replace style
{border:none}
button:focus {outline:0;}

4. success page template
<div style="width:100%; display:flex; height:70vh; justify-content: center; align-items: center; padding: 16px;">
    Success
</div>

	</end>
<hitle>	Confirm email/password	<chare>	2	<pext>	$("#contact_form").submit(function(e){
	//var email = $('#field3').val();
	//var conf_email = $('#field4').val();
	if($("#input_mail").val() != $("#input_confirm_mail").val()) {
		alert('確認メールアドレスが間違っています');
		$("#input_confirm_mail").focus();
		e.preventDefault();
	}
});	</end>
<hitle>	Textarea linebreak BR	<chare>	2	<pext>	<?php echo nl2br($field5); ?>	</end>
<hitle>	Button focus style none	<chare>	2	<pext>	      .button:focus {
        outline: none;
      }	</end>
<hitle>	Button history back	<chare>	2	<pext>	<button onclick="history.back()">Go Back</button>	</end>
<hitle>	Japanese Address auto input	<chare>	2	<pext>	<?php
get_header();
?>
<script src="https://yubinbango.github.io/yubinbango/yubinbango.js" charset="UTF-8"></script>
<!-- <form class="h-adr">
  <span class="p-country-name" style="display:none;">Japan</span>
    郵便番号：<input type="text" class="p-postal-code" size="8" maxlength="8" value=”520-0514”><br>
    都道府県：<input type="text" class="p-region" /><br>
    地区町村：<input type="text" class="p-locality" /><br>
    町名番地：<input type="text" class="p-street-address p-extended-address" />
</form> -->
1. script
<script src="https://yubinbango.github.io/yubinbango/yubinbango.js" charset="UTF-8"></script>
2. form tag
<form class="h-adr" action="" method="post" enctype="multipart/form-data">
<span class="p-country-name" style="display:none;">Japan</span>
<input type="hidden" class="p-region" />
<input type="hidden" class="p-locality p-street-address" />
<input type="hidden" class="p-extended-address" />
3. change auto input button
<a class="btn_autoaddress" href="javascript:void(0)">住所自動入力</a>
4. 郵便番号
<input type="text" name="field5" class="p-postal-code" size="8" maxlength="8" placeholder="例）000-0000">
5. 都道府県
<input type="text" class="my_region" name="field6" placeholder="例）東京都">
6. 市区町村・番地
<input type="text" class="my_address" name="field7" placeholder="例）〇〇市〇区00-000">
7. 建物名・部屋番号
<input type="text" name="field8" class="my_extended_address" placeholder="">
8. custom.js
$('.btn_autoaddress'). click(function() {
	$('.my_region').val($('.p-region').val());
	$('.my_address').val($('.p-locality').val());
	$('.my_extended_address').val($('.p-extended-address').val())
});	</end>
<hitle>	datepicker	<chare>	2	<pext>	1. copy css files and images folder into css folder
Jquery-ui.css
Jquery-ui.structure.css
Jquery-ui.theme.css
[and images folder]

2. copy js files into js folder
Jquery-ui.js
Datepicer-ja.js

3. import css
<link href="css/jquery-ui.css" rel="stylesheet" type="text/css">
<link href="css/jquery-ui.structure.css" rel="stylesheet" type="text/css">
<link href="css/jquery-ui.theme.css" rel="stylesheet" type="text/css">

4. import js
<script type="text/javascript" src="js/jquery-ui.js"></script>
<script type="text/javascript" src="js/datepicker-ja.js"></script>

5. make datepicker input
<input type="text" class="datepicker" name="希望日" value="" placeholder="クリックして日付を入力"></input>

6. write js code into main/custom.js
$(function(){
	$(".datepicker").datepicker();
});	</end>
<hitle>	Hamburger menu not closing	<chare>	1	<pext>	/*----- MOBILE_MENU_START -----*/
$(".mobile-menu-hp").click(function() {
	$(".menu-toggle-btn-hp").toggleClass("open");
	$(".navigation-main-hp").slideToggle();
	$("body").toggleClass("hide-scroll");
});
$(".navigation-main-hp a").click(function() {
	$(".menu-toggle-btn-hp").toggleClass("open");
	$(".navigation-main-hp").slideToggle();
	$("body").toggleClass("hide-scroll");
});
/*----- MOBILE_MENU_END -----*/	</end>
<hitle>	Js_button	<chare>	1	<pext>	$('.js_button').click(function() {
	if($(this).attr('data-href')) {
		if($(this).attr('data-target') == "_blank") {
			window.open($(this).attr('data-href'), '_blank');
		} else {
			location.href = $(this).attr('data-href');
		}
	}
});

.js_button {
	cursor: pointer;
	transition: all .3s;
}
.js_button:hover {
	opacity: .7;
}	</end>
<hitle>	Default Post	<chare>	1	<pext>	Wordpress default post	</end>
<hitle>	Common Blog/Sidebar	<chare>	2	<pext>	------In the index/archieve/category page-----
global $wp_query;
$query = $wp_query;

$category_id = 0;
if(is_category() || is_single()){
	$category_id = get_query_var('cat');
}

get_template_part('template-parts/common-blog');
--------template-parts/common-blog.php----------
global $query;
global $category_id;
$post_ids = [];
if ( $query->have_posts() ) :
    while ( $query->have_posts() ) :
        $query->the_post();
        $loop_id = get_the_id();
        array_push($post_ids, $loop_id);
    endwhile;
endif;
	</end>
<hitle>	Post prev/next navigation	<chare>	2	<pext>	the_post_navigation(
	array(
		'prev_text' => '<span class="nav-subtitle">' . esc_html__( 'Previous:', 'hayapen' ) . '</span> <span class="nav-title">%title</span>',
		'next_text' => '<span class="nav-subtitle">' . esc_html__( 'Next:', 'hayapen' ) . '</span> <span class="nav-title">%title</span>',
	)
);	</end>
<hitle>	Category/tags in post	<chare>	2	<pext>	$loop_category_objects = get_the_category($loop_id);
    $loop_category_name = "";
    foreach($loop_category_objects as $cd){
        $loop_category_name = $cd->cat_name;
        break;
    }
    $loop_tags = [];
    $loop_tag_objects = get_the_tags();
    if ($loop_tag_objects) {
        foreach($loop_tag_objects as $tag) {
            array_push($loop_tags, array('name' => $tag->name, 'link' => get_tag_link($tag->term_id)));
        }
    }	</end>
<hitle>	Custom Post Type	<chare>	1	<pext>	-----Custom Category-----------
CPT UI/Texanomy/
階層 또는 hierarchy true로 설정하여야 기존카테고리처럼 사용할수 있다.
-----Custom Tag-----
CPT UI/Texanomy
階層 또는 hierarchy false로 설정하여야 기존태그처럼 사용할수 있다.	</end>
<hitle>	Category/tags in current-custom-post	<chare>	2	<pext>	$category_id = get_queried_object()->term_id;	</end>
<hitle>	All custom category/tags	<chare>	2	<pext>	$terms = get_terms([
    'taxonomy' => ‘custom_category’,
    'hide_empty' => false,
]);
foreach ($terms as $term){
  echo $term->slug." : ";
  echo $term->name;
  echo $get_term_link($term);
  echo $term->term_id;
}	</end>
<hitle>	Text Only from the_content()	<chare>	2	<pext>	echo wp_strip_all_tags( get_the_content() );	</end>
<hitle>	Image rotate 360 infinite	<chare>	1	<pext>	img.rot360 {
    transform: rotate(0deg);
    animation: anim_rotate360 10s linear infinite;
}
@keyframes anim_rotate360 {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
}	</end>
<hitle>	Phone call, mailto	<chare>	1	<pext>	<a href="tel:123-456-7890">123-456-7890</a>
<a href="mailto:email@example.com, secondemail@example.com">Send Email</a>	</end>
<hitle>	Contact Form 7	<chare>	1	<pext>	<?php echo do_shortcode("[your_shortcode]"); ?>	</end>
<hitle>	Anchor point	<chare>	1	<pext>	<div class="id_line" id="greeting"></div>

.id_line {
    width: 100%;
    height: 0;
    transform: translateY(-100px);
}
@media (max-width:767px) {
    .id_line {
        transform: translateY(-60px);
        height: 0;
    }
}	</end>
<hitle>	Study Sites	<chare>	1	<pext>	https://igie.jp/service/
scss, normalize/reset.scss	</end>
<hitle>	Magic scrolling effect	<chare>	1	<pext>	/js/ScrollMagic.min.js
/js/TweenMax.min.js
let controller = new ScrollMagic.Controller();
let target = document.querySelectorAll('.js_tgt');
for (var i = 0; i < target.length; i++) {
	let classToggle = new ScrollMagic.Scene({
		triggerElement: target[i],
		//reverse: false
	}).triggerHook('0.85').setClassToggle(target[i], 'on').addTo(controller);
}	</end>
<hitle>	OwlCarousel	<chare>	1	<pext>	Import, Owl.theme.min.css, owl.theme.default.css, owl.theme.default
<link href="<?php echo get_stylesheet_directory_uri(); ?>/css/owl.carousel.css" rel="stylesheet">
<link href="<?php echo get_stylesheet_directory_uri(); ?>/css/owl.theme.default.css" rel="stylesheet">
<script src="<?php echo get_stylesheet_directory_uri(); ?>/js/owl.carousel.min.js"></script>
---------set items wrap div with owl classes-------
<div class="works_top_hp owl-carousel owl-theme" id="works_top_hp">
---------use owl js--------
if($('#works_top_hp')) {
	$(".works_top_hp").owlCarousel({
		dots: true,
        dotsEach: true,
        nav: false,
        margin: 20,
        smartSpeed: 450,
        loop: true,
        autoplay: true,
        responsive: {
            0: {
                items: 1,
            },
            768: {
                items: 2,
            },
            992: {
                items: 3,
            },
            1401: {
                items: 4,
            },
        }
	});
}	</end>
<hitle>	Disable Empty href	<chare>	1	<pext>	$('a[href="#"]').click(function(e){
	e.preventDefault();
	console.log("hello");
})	</end>
<hitle>	Japanese Fonts	<chare>	1	<pext>	@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Josefin%20Sans:wght@100;200;300;400;500;600;700;800;900&display=swap');

font-family: 'Noto Sans JP', "ヒラギノ角ゴ ProN", Hiragino Kaku Gothic ProN, "メイリオ", Meiryo, "游ゴシック Medium", YuGothic, YuGothicM, sans-serif;

.font-mon {
    font-family: 'Montserrat', sans-serif;
}

.font-pop {
    font-family: 'Poppins', sans-serif;
}

.font-jose {
    font-family: 'Josefin Sans', sans-serif;
}	</end>
<hitle>	animation SpecialColImage	<chare>	1	<pext>	<script src="js/jquery-3.5.1.slim.min.js" type="text/javascript"></script>
<script src="js/popper.min.js" type="text/javascript"></script>
<script src="js/bootstrap.min.js" type="text/javascript"></script>
<script src="js/jquery.min.js"></script>
<script src="js/ScrollMagic.min.js"></script>
<script src="js/TweenMax.min.js"></script>
<script src="js/custom.js"></script>

/*-- Magic animation start --*/
$(function(){

	/*
	 * Scroll Function
	*/
	
	// 全体制御コントローラ
	var controller = new ScrollMagic.Controller();
	
	// トリガー設定
	const hook = '0.8';
	
	// 速度設定
	var duration = 0.6;
	
	
	var fadeUpText = new TimelineMax();
			fadeUpText.fromTo('.tw-ttl', duration, { opacity: 0, y: '60px', x:'0'}, {opacity: 1, y: '0', x: '0', ease: Cubic.easeOut})
			.fromTo('.tw-txt', duration, { opacity: 0, y: '60px', x:'0'}, {opacity: 1, y: '0', x: '0', ease: Cubic.easeOut}, 0.1);
	
	
	var showImg;
	
	
});
	
let controller = new ScrollMagic.Controller();
let target = document.querySelectorAll('.js_tgt');
for (var i = 0; i < target.length; i++) {
	let classToggle = new ScrollMagic.Scene({
		triggerElement: target[i],
		//reverse: false
	}).triggerHook('0.85').setClassToggle(target[i], 'on').addTo(controller);
}
	
/*-- Magic animation end --*/

        <div class="about_right">
            <div class="special_col js_tgt">
                <div class="special_img_wrap">
                    <div class="special_img_div">
                        <img src="images/top_about.jpg" alt="">
                        <div class="special_img_cover"></div>
                    </div>
                    <div class="special_img_back"></div>
                </div>
            </div>
        </div>

.about_right { width: 45%; position: relative; } 
.special_col { width: 100%; position: relative; } 
.special_img_wrap { transition: transform .35s ease-in; transform: translateX(100%); position: relative; } 
.special_col.js_tgt.on .special_img_wrap { transform: translateX(0); } 
.special_img_div { position: relative; overflow: hidden; } 
.special_img_div img { position: relative; z-index: 1; width: 100%; height: auto; } 
.special_img_back { content: " "; position: absolute; width: 100%; height: 100%; top: 40px; right: 40px; z-index: 0; opacity: .8; background: #F3F2EF; } 
.special_img_cover { width: 150%; height: 100%; background: #ccc; position: absolute; top: 0; left: -25%; z-index: 2; 
    transition: transform .65s ease-out; transition-delay: .35s; transform: translateX(0) skewX(-35deg); 
} 
.special_col.js_tgt.on .special_img_cover { transform: translateX(100%) skewX(-35deg); }	</end>
<hitle>	panil1 left	<chare>	2	<pext>	***parent should have { position: relative;}***
.panil1_set { width: 100%; position: relative; } 
.panil1_drive { transition: transform .35s ease-in; transform: translateX(-100%); position: relative; } 
.panil1_set.js_tgt.on .panil1_drive { transform: translateX(0); } 
.panil1_imgdiv { position: relative; overflow: hidden; } 
.panil1_imgdiv img { position: relative; z-index: 1; width: 100%; height: auto; } 
.panil1_shadow { content: " "; position: absolute; width: 100%; height: 100%; top: 40px; left: 40px; z-index: 0; opacity: .8; background: #F3F2EF; } 
.panil1_cover { width: 150%; height: 100%; background: #ccc; position: absolute; top: 0; left: -25%; z-index: 2; 
    transition: transform .65s ease-out; transition-delay: .35s; transform: translateX(0) skewX(35deg); 
} 
.panil1_set.js_tgt.on .panil1_cover { transform: translateX(-100%) skewX(35deg); }
***html***
            <div class="parent">
                <div class="panil2_set js_tgt">
                    <div class="panil2_drive">
                        <div class="panil2_imgdiv">
                            <img src=””>
                            <div class="panil2_cover"></div>
                        </div>
                        <div class="panil2_shadow"></div>
                    </div>
                </div>
            </div>	</end>
<hitle>	panir1 right	<chare>	2	<pext>	***parent should have { position: relative;}***
.panir1_set { width: 100%; position: relative; } 
.panir1_drive { transition: transform .35s ease-in; transform: translateX(100%); position: relative; } 
.panir1_set.js_tgt.on .panir1_drive { transform: translateX(0); } 
.panir1_imgdiv { position: relative; overflow: hidden; } 
.panir1_imgdiv img { position: relative; z-index: 1; width: 100%; height: auto; } 
.panir1_shadow { content: " "; position: absolute; width: 100%; height: 100%; top: 40px; right: 40px; z-index: 0; opacity: .8; background: #F3F2EF; } 
.panir1_cover { width: 150%; height: 100%; background: #ccc; position: absolute; top: 0; left: -25%; z-index: 2; 
    transition: transform .65s ease-out; transition-delay: .35s; transform: translateX(0) skewX(-35deg); 
} 
.panir1_set.js_tgt.on .panir1_cover { transform: translateX(100%) skewX(-35deg); }	
***html***
            <div class="parent">
                <div class="panir2_set js_tgt">
                    <div class="panir2_drive">
                        <div class="panir2_imgdiv">
                            <img src=””>
                            <div class="panir2_cover"></div>
                        </div>
                        <div class="panir2_shadow"></div>
                    </div>
                </div>
            </div>	</end>
<hitle>	panil2 left	<chare>	2	<pext>	***parent should have { position: relative;}***
.panil2_set { height:calc(100%); width: 100%; position: relative; } 
.panil2_drive { width: calc(100%); height: calc(100%); transition: transform .35s ease-in; transform: translateX(-100%); position: relative; } 
.panil2_set.js_tgt.on .panil2_drive { transform: translateX(0); } 
.panil2_imgdiv { width: calc(100%); height: calc(100%); position: relative; overflow: hidden; } 
.panil2_face {width: 100%; height: calc(100%); background-color: red; position: relative; z-index: 1;} 
.panil2_shadow { content: " "; position: absolute; width: 100%; height: 100%; top: 40px; left: 40px; z-index: 0; opacity: .8; background: #F3F2EF; } 
.panil2_cover { width: 150%; height: 100%; background: #ccc; position: absolute; top: 0; left: -25%; z-index: 2; 
    transition: transform .65s ease-out; transition-delay: .35s; transform: translateX(0) skewX(35deg); 
} 
.panil2_set.js_tgt.on .panil2_cover { transform: translateX(-100%) skewX(35deg); }
***html***
            <div class="parent">
                <div class="panil2_set js_tgt">
                    <div class="panil2_drive">
                        <div class="panil2_imgdiv">
                            <div class="panil2_face"></div>
                            <div class="panil2_cover"></div>
                        </div>
                        <div class="panil2_shadow"></div>
                    </div>
                </div>
            </div>	</end>
<hitle>	panir2 right	<chare>	2	<pext>	***parent should have { position: relative;}***
.panir2_set { height:calc(100%); width: 100%; position: relative; } 
.panir2_drive { width: calc(100%); height: calc(100%); transition: transform .35s ease-in; transform: translateX(100%); position: relative; } 
.panir2_set.js_tgt.on .panir2_drive { transform: translateX(0); } 
.panir2_imgdiv { width: calc(100%); height: calc(100%); position: relative; overflow: hidden; } 
.panir2_face {width: 100%; height: calc(100%); background-color: red; position: relative; z-index: 1;} 
.panir2_shadow { content: " "; position: absolute; width: 100%; height: 100%; top: 40px; right: 40px; z-index: 0; opacity: .8; background: #F3F2EF; } 
.panir2_cover { width: 150%; height: 100%; background: #ccc; position: absolute; top: 0; left: -25%; z-index: 2; 
    transition: transform .65s ease-out; transition-delay: .35s; transform: translateX(0) skewX(-35deg); 
} 
.panir2_set.js_tgt.on .panir2_cover { transform: translateX(100%) skewX(-35deg); }
***html***
            <div class="parent">
                <div class="panir2_set js_tgt">
                    <div class="panir2_drive">
                        <div class="panir2_imgdiv">
                            <div class="panir2_face"></div>
                            <div class="panir2_cover"></div>
                        </div>
                        <div class="panir2_shadow"></div>
                    </div>
                </div>
            </div>
	</end>
<hitle>	Animation typing effect	<chare>	1	<pext>	1. copy theatherJS.js
2. include theatherJS
<script src="js/theaterJS.js"></script>
3. css
.parent {
   Position: relative;
}
.parent .target_text {
    visibility: hidden; 
    font-size: 50px;
    line-height: 1.8;
}
.com_actor__content {
    font-size: 50px;
    font-weight: bold;
    line-height: 1.8;
    position: absolute;
    top: 0;
    left: 0;
}
@-webkit-keyframes blink {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
}
@keyframes blink {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
}
.com_actor__content--typing::after {
    content: "|";
    -webkit-animation: blink 500ms infinite;
            animation: blink 500ms infinite;
}
4. html
                    <div class="banner1">
                        <div id="elactor" class="com_actor__content"></div>
                        <h1>With Human Power!</h1>
                    </div>
5. javascript
/*--TheaterJS typing effect --*/
$(function(){
	$(window).load(function () {
		setTimeout(function () {
			var theater = theaterJS()
	
			theater
			  .on('type:start, erase:start', function () {
				theater.getCurrentActor().$element.classList.add('com_actor__content--typing')
			  })
			  .on('type:end, erase:end', function () {
				theater.getCurrentActor().$element.classList.remove('com_actor__content--typing')
			  })
			
			theater
				  .addActor('elactor', { speed: 0.8, accuracy: 1 })
				.addScene('elactor:With Power?          ', -16, 'Human Power')
		}, 1000);
	});
});

/*--TheaterJS typing effect end--*/
6. referenced code

var theater = theaterJS()
theater
  .on('type:start, erase:start', function () {
    theater.getCurrentActor().$element.classList.add('actor__content--typing')
  })
  .on('type:end, erase:end', function () {
    theater.getCurrentActor().$element.classList.remove('actor__content--typing')
  })
  .on('type:start, erase:start', function () {
    if (theater.getCurrentActor().name === 'vader') {
      document.body.classList.add('dark')
    } else {
      document.body.classList.remove('dark')
    }
  })

theater
  .addActor('vader', { speed: 0.8, accuracy: 0.6 })
  .addActor('luke')
  .addScene('vader:Luke.', 600)
  .addScene('luke:What?', 400)
  .addScene('vader:I am your father.', 400)
  .addScene('luke:Nooo...', -3, '!!! ', 600, 'No! ', 600)
  .addScene('luke:That\'s not true!', 600)
  .addScene('luke:That\'s impossible!', 400)
  .addScene('vader:Search your feelings.', 1600)
  .addScene('vader:You know it to be true.', 1000)
  .addScene('luke:Noooooooo! ', 600, 'No!', 400)
  .addScene('vader:Luke.', 600)
  .addScene('vader:You can destroy the Emperor.', 1600)
  .addScene('vader:He has foreseen this. ', 800)
  .addScene('vader:It is your destiny.', 1600)
  .addScene('vader:Join me.', 800)
  .addScene('vader:Together we can rule the galaxy.', 800)
  .addScene('vader:As father and son.', 1600)
  .addScene('vader:Come with me. ', 800)
  .addScene('vader:It is the only way.', 2000)
  .addScene(theater.replay.bind(theater))	</end>
<hitle>	Windows10Update	<chare>	1	<pext>	1. run services.msc
2. double-click Windows Update
3. Manual/Disable	</end>
<hitle>	VSCode Fomatters	<chare>	1	<pext>	auto close tag
auto rename tag
html format
JS-CSS-HTML Formatter	</end>
<hitle>	Option page by ACF	<chare>	1	<pext>	1. create ACF field group
2. Assigin to defined option page.
//function.php
add_action('acf/init', function () {
	if( function_exists('acf_add_options_page') ) {
		acf_add_options_page([
			'page_title' => 'よくある質問',
			'menu_title' => 'よくある質問',
			'menu_slug' => 'faq-settings',
			'capability' => 'manage_options',
			'position' => 30,
			'icon_url' => 'dashicons-admin-generic',
		]);
	}
});	</end>
